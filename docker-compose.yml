#
# Ci-dessous la config qui permet de lancer rafa-docker
#
# Remarque: avant de lancer docker-compose up, il faut régler le fichier .env
# en partant du fichier .env-dist qui donne les variables d'environnements
# à personnaliser et des exemples de valeurs.
#

version: "3.5"

x-common-variables: &rafa_variables
  APPLIS_ENV: ${APPLIS_ENV}
  rafa.dataSource.jdbcUrl: "jdbc:oracle:thin:@//rafa-db:1521/FREE"
  rafa.dataSource.user: ${RAFA_DATASOURCE_USER}
  rafa.dataSource.password: ${RAFA_DATASOURCE_PASSWORD}

services:

  ####################################
  # Interface utilisateur de rafa
  ####################################
  rafa-web:
    build:
      context: ./images/Rafa/
      dockerfile: Dockerfile
      target: rafa-web-image
    image: rafa-web-image:${RAFA_VERSION}
    container_name: rafa-web
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    depends_on:
      rafa-db:
        condition: service_healthy
    environment:
      <<: *rafa_variables
      rafa.mail.smtp.host: ${RAFA_MAIL_SMTP_HOST}
      rafa.mail.smtp.port: ${RAFA_MAIL_SMTP_PORT}
      rafa.mail.smtp.username: ${RAFA_MAIL_SMTP_USERNAME}
      rafa.mail.smtp.password: ${RAFA_MAIL_SMTP_PASSWORD}
      rafa.mail.smtp.from: ${RAFA_MAIL_SMTP_FROM}
    ports:
      - ${RAFA_WEB_HTTP_PORT}:8080
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=rafa"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=tomcat"



  ####################################
  # Batch de rafa
  ####################################
  rafa-batch:
    build:
      context: ./images/Rafa/
      dockerfile: Dockerfile
      target: rafa-batch-image
    image: rafa-batch-image:${RAFA_VERSION}
    container_name: rafa-batch
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    volumes:
      - ${RAFA_BATCH_DIR_OUT}:/scripts/output/
    depends_on:
      rafa-db:
        condition: service_healthy
    environment:
      <<: *rafa_variables
      RAFA_BATCH_CRON: ${RAFA_BATCH_CRON}
      RAFA_BATCH_AT_STARTUP: ${RAFA_BATCH_AT_STARTUP}
      rafa.batch.dir.out: /scripts/output/
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=rafa"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=java-spring"



  ##############################
  # rafa-db
  # Base de données oracle de rafa
  ##############################
  rafa-db:
    image: container-registry.oracle.com/database/free:23.2.0.0
    container_name: rafa-db
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    ports:
      - ${RAFA_DB_ORACLE_PORT}:1521
    environment:
      ORACLE_PWD: ${RAFA_ORACLE_PWD}
      RAFA_DATASOURCE_PASSWORD: ${RAFA_DATASOURCE_PASSWORD}
      RAFA_DATASOURCE_USER: ${RAFA_DATASOURCE_USER}
    volumes:
      - ./volumes/rafa-db/oradata/:/opt/oracle/oradata/
      - ./volumes/rafa-db/setup-scripts/:/opt/oracle/scripts/startup/
      # Attention : ce volume doit être identique à celui présent dans le conteneur rafa-db-dumper
      # pour que les sauvegardes puissent se faire correctement
      - ./volumes/rafa-db/backup/:/backup/
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=rafa"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=oracle"

  #######################################
  # rafa-db-dumper
  #######################################
  rafa-db-dumper:
    image: abesesr/oracle-db-backup:free-23.2.0.2
    container_name: rafa-db-dumper
    restart: unless-stopped
    mem_limit: ${MEM_LIMIT}
    memswap_limit: ${MEM_LIMIT}
    cpus: ${CPU_LIMIT}
    depends_on:
      rafa-db:
        condition: service_healthy
    environment:
      ORACLE_DB_DUMPER_HOST: "rafa-db"
      ORACLE_DB_DUMPER_PORT: 1521
      ORACLE_DB_DUMPER_ORACLE_PWD: ${RAFA_ORACLE_PWD}
      ORACLE_DB_DUMPER_ORACLE_SCHEMA_TO_BACKUP: ${RAFA_DATASOURCE_USER}
      ORACLE_DB_DUMPER_DUMPNAME_PATTERN: "rafa-db-$(date +'%Y-%m-%d')"
      ORACLE_DB_BACKUP_CLEANUP_TIME: "7" # nbr de jours de backup à conserver
    volumes:
      # Attention : ce volume doit être identique à celui présent dans le conteneur rafa-db
      # pour que les sauvegardes puissent se faire correctement
      - ./volumes/rafa-db/backup/:/backup/
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=rafa"
      - "co.elastic.logs/processors.add_fields.fields.abes_middleware=oracle-db-backup"

